<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="786,5276" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="796,5111.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_8">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="C:\UiPath-TimeSheet\Target" Name="strTargetFolder" />
      <Variable x:TypeArguments="x:String" Default="analysis" Name="strWildCardAnalysis" />
      <Variable x:TypeArguments="s:String[]" Name="arrTargetFile" />
      <Variable x:TypeArguments="x:String" Default="C:\UiPath-TimeSheet\Source" Name="strSourceFolder" />
      <Variable x:TypeArguments="s:String[]" Name="arrSourceName" />
      <Variable x:TypeArguments="x:String" Default="RawData" Name="strRawDataSheet" />
      <Variable x:TypeArguments="x:String" Default="C:\UiPath-TimeSheet\Pivot Template\yyyymm_log_time_export_analysis_TEMPLATE.xlsx" Name="strTemplateName" />
      <Variable x:TypeArguments="x:String" Default="logtime_yyyymmddhhmmssUSERNAME" Name="strFormulaSheet" />
      <Variable x:TypeArguments="x:String" Default="4000" Name="strRowCount" />
      <Variable x:TypeArguments="s:String[]" Name="arrPivotWorkSheet" />
      <Variable x:TypeArguments="x:String" Name="strMapNameCSV" />
      <Variable x:TypeArguments="x:String" Name="strMapNameSheet" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="754,404" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[strWildCardAnalysis]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">["analysis"]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[strTargetFolder]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">C:\UiPath-TimeSheet\Target</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="s:String[]">[arrTargetFile]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles( strTargetFolder, "*" + strWildCardAnalysis + "*" )]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[strSourceFolder]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">C:\UiPath-TimeSheet\Source</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="s:String[]">[arrSourceName]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles( strSourceFolder )]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[strFormulaSheet]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">logtime_yyyymmddhhmmssUSERNAME</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[strRawDataSheet]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">RawData</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[strTemplateName]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">C:\UiPath-TimeSheet\Pivot Template\yyyymm_log_time_export_analysis_TEMPLATE.xlsx</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[strMapNameCSV]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">C:\UiPath-TimeSheet\Pivot Template\MapName.csv</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[strMapNameSheet]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">MapName</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="s:String[]">[arrPivotWorkSheet]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="s:String[]">[{ "By %", "By Hour", "By Day" }]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="Array.ForEach(Directory.GetFiles(path),Sub(x) File.Delete(x))" DisplayName="Invoke code - empty target folder" sap:VirtualizedContainerService.HintSize="754,164" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="path">[strTargetFolder]</InArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <Sequence sap:VirtualizedContainerService.HintSize="754,4371.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_7">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each - file name in array of source file name" sap:VirtualizedContainerService.HintSize="712,4279.33333333333" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[arrSourceName]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:String">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:String" Name="strTimeSheetName" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="675.333333333333,4140.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_6">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="strDateTime" />
                <Variable x:TypeArguments="x:String" Name="strTargetName" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - date time part of target file name" sap:VirtualizedContainerService.HintSize="633.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_1">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strDateTime]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[strTimeSheetName.Split( "_".ToCharArray )( 1 ).Substring( 0, 6 )]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign - unwant part of target file name " sap:VirtualizedContainerService.HintSize="633.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_2">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strTargetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[strTemplateName.Split( "_".ToCharArray )( 0 )]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign - target file name" sap:VirtualizedContainerService.HintSize="633.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_3">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strTargetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[strDateTime + strTemplateName.Replace( strTargetName, "" ).Replace( "_TEMPLATE", "" )]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:CopyFile ContinueOnError="{x:Null}" Destination="[strTargetFolder +&quot;\&quot; + strTargetName]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="633.333333333333,162" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="[strTemplateName]" />
              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="633.333333333333,3540.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_5">
                <Sequence.Variables>
                  <Variable x:TypeArguments="sd:DataTable" Default="[New System.Data.DataTable]" Name="dtlCSV" />
                  <Variable x:TypeArguments="sd:DataTable" Name="dtlMapName" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ReadCsvFile Encoding="{x:Null}" DataTable="[dtlMapName]" Delimitator="Comma" DisplayName="Read CSV - Map Name" FilePath="[strMapNameCSV]" sap:VirtualizedContainerService.HintSize="591.333333333333,156.666666666667" sap2010:WorkflowViewState.IdRef="ReadCsvFile_1" IncludeColumnNames="False" />
                <ui:ReadCsvFile Encoding="{x:Null}" DataTable="[dtlCSV]" Delimitator="Comma" DisplayName="Read CSV - TimeSheet" FilePath="[strTimeSheetName]" sap:VirtualizedContainerService.HintSize="591.333333333333,156.666666666667" sap2010:WorkflowViewState.IdRef="ReadCsvFile_2" />
                <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtlCSV]" DisplayName="For Each Row in Data Table - change date format to YYYY-mm-dd" sap:VirtualizedContainerService.HintSize="591.333333333333,278" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,154" sap2010:WorkflowViewState.IdRef="Sequence_1">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_4">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[CurrentRow( 1 )]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[CurrentRow( 1 ).ToString.Substring( 6, 4 ) + "-" + CurrentRow( 1 ).ToString.Substring( 3, 2 ) + "-" + CurrentRow( 1 ).ToString.Substring( 0, 2 )]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                </ui:ForEachRow>
                <Assign sap:VirtualizedContainerService.HintSize="591.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_5">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strRowCount]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[( dtlCSV.Rows.Count + 1 ).ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="591.333333333333,2635.33333333333" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="[strTargetFolder +&quot;\&quot; + strTargetName]">
                  <ui:ExcelApplicationScope.Body>
                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="557.333333333333,2526.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_4">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExcelWriteRange AddHeaders="False" DataTable="[New DataTable]" DisplayName="Write Range - create MapName sheet" sap:VirtualizedContainerService.HintSize="515.333333333333,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="[strMapNameSheet]" StartingCell="A1" />
                        <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtlMapName]" DisplayName="Write Range - import name mapping" sap:VirtualizedContainerService.HintSize="515.333333333333,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_2" SheetName="[strMapNameSheet]" StartingCell="A1" />
                        <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="515.333333333333,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_1" />
                        <ui:ExcelWriteRange AddHeaders="False" DataTable="[New DataTable]" DisplayName="Write Range - create RawData sheet" sap:VirtualizedContainerService.HintSize="515.333333333333,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_3" SheetName="[strRawDataSheet]" StartingCell="A1" />
                        <ui:ExcelWriteRange AddHeaders="True" DataTable="[dtlCSV]" DisplayName="Write Range - import timesheet into RawData sheet" sap:VirtualizedContainerService.HintSize="515.333333333333,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_4" SheetName="[strRawDataSheet]" StartingCell="A1" />
                        <ui:ExcelCopyPasteRange DestinationCell="N1" DestinationSheet="[strRawDataSheet]" DisplayName="Copy/Paste Range - extra formula to RawData sheet" sap:VirtualizedContainerService.HintSize="515.333333333333,244.666666666667" sap2010:WorkflowViewState.IdRef="ExcelCopyPasteRange_1" SheetName="[strFormulaSheet]" SourceRange="N1:S2" />
                        <ui:ExcelAutoFillRange DisplayName="Auto Fill Range - the extra formula" FillRange="[&quot;N2:S&quot; + strRowCount]" sap:VirtualizedContainerService.HintSize="515.333333333333,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_1" SheetName="[strRawDataSheet]" SourceRange="N2:S2" />
                        <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="515.333333333333,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_2" />
                        <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each - pivot sheet" sap:VirtualizedContainerService.HintSize="515.333333333333,1074.66666666667" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[arrPivotWorkSheet]">
                          <ui:ForEach.Body>
                            <ActivityAction x:TypeArguments="x:String">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="x:String" Name="itemPivotSheet" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="478.666666666667,939.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_3">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:GetActiveWindow ApplicationWindow="{x:Null}" DisplayName="Get Active Window" sap:VirtualizedContainerService.HintSize="436.666666666667,847.333333333333" sap2010:WorkflowViewState.IdRef="GetActiveWindow_1">
                                  <ui:GetActiveWindow.Body>
                                    <ActivityAction x:TypeArguments="x:Object">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,768.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_2">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="sd:DataTable" Name="dtlPivotRange" />
                                          <Variable x:TypeArguments="x:String" Name="strDataSourceRange" />
                                        </Sequence.Variables>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="MaximizeWindow_1" />
                                        <ui:ExcelReadRange AddHeaders="True" DataTable="[dtlPivotRange]" DisplayName="Read Range - output RawData to dtlPivotRange" sap:VirtualizedContainerService.HintSize="334,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="[strRawDataSheet]">
                                          <ui:ExcelReadRange.Range>
                                            <InArgument x:TypeArguments="x:String">
                                              <Literal x:TypeArguments="x:String" Value="" />
                                            </InArgument>
                                          </ui:ExcelReadRange.Range>
                                        </ui:ExcelReadRange>
                                        <Assign DisplayName="Assign - source data range" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_6">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strDataSourceRange]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">["RawData!$A$1:$S$" + ( dtlPivotRange.Rows.Count + 1 ).ToString]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <ui:ExcelSelectRange DisplayName="Select Range - in pivot table" sap:VirtualizedContainerService.HintSize="334,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_1" Range="A3" SheetName="[itemPivotSheet]" />
                                        <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey - pop up change data source diaolgue box" sap:VirtualizedContainerService.HintSize="334,117.333333333333" sap2010:WorkflowViewState.IdRef="SendHotkey_1" Key="jtid" KeyModifiers="Alt">
                                          <ui:SendHotkey.Target>
                                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="da19e9da-db8b-4459-a6f3-8356a9313bce">
                                              <ui:Target.TimeoutMS>
                                                <InArgument x:TypeArguments="x:Int32" />
                                              </ui:Target.TimeoutMS>
                                              <ui:Target.WaitForReady>
                                                <InArgument x:TypeArguments="ui:WaitForReady" />
                                              </ui:Target.WaitForReady>
                                            </ui:Target>
                                          </ui:SendHotkey.Target>
                                        </ui:SendHotkey>
                                        <ui:TypeInto Activate="{x:Null}" AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" DisplayName="Type Into - new data source range and press enter" sap:VirtualizedContainerService.HintSize="334,96" sap2010:WorkflowViewState.IdRef="TypeInto_1" Text="[strDataSourceRange + Environment.NewLine]">
                                          <ui:TypeInto.Target>
                                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="d30df071-5ad2-4438-a0d3-6c12006dcb88">
                                              <ui:Target.TimeoutMS>
                                                <InArgument x:TypeArguments="x:Int32" />
                                              </ui:Target.TimeoutMS>
                                              <ui:Target.WaitForReady>
                                                <InArgument x:TypeArguments="ui:WaitForReady" />
                                              </ui:Target.WaitForReady>
                                            </ui:Target>
                                          </ui:TypeInto.Target>
                                        </ui:TypeInto>
                                        <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_3" />
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:GetActiveWindow.Body>
                                </ui:GetActiveWindow>
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEach.Body>
                        </ui:ForEach>
                        <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="515.333333333333,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_2" Range="A1" SheetName="[strRawDataSheet]" />
                        <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey - set column filter" sap:VirtualizedContainerService.HintSize="515.333333333333,117.333333333333" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="l" KeyModifiers="Ctrl, Shift">
                          <ui:SendHotkey.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="29fc8050-d57a-41d2-964a-7f8c65cd0809">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:SendHotkey.Target>
                        </ui:SendHotkey>
                        <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="515.333333333333,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_4" />
                      </Sequence>
                    </ActivityAction>
                  </ui:ExcelApplicationScope.Body>
                </ui:ExcelApplicationScope>
              </Sequence>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
      </ui:ForEach>
    </Sequence>
  </Sequence>
</Activity>